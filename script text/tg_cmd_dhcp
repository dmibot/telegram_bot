:local send [:parse [/system script get tg_sendMessage source]]
:local tolower [:parse [/system script get func_lowercase source]]
:local param1 [:pick $params 0 [:find $params " "]]
:local param2 [:pick $params ([:find $params " "]+1) [:len $params]]
:local param3 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] ([:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]+1) [:len [:pick $params ([:find $params " "]+1) [:len $params]]]]
:if ([:len [:find $param2 " "]]>0) do={
    :set param2 [:pick [:pick $params ([:find $params " "]+1) [:len $params]] 0 [:find [:pick $params ([:find $params " "]+1) [:len $params]] " "]]
} else={
    :set param3 ""
}

:local paramsLower [$tolower $params]
:local param1Lower [$tolower $param1]
:local param2Lower [$tolower $param2]
:local param3Lower [$tolower $param3]

:local getVendor false
:if ($paramsLower = "lease") do={
    :local GetMacVendor do={
        :do {
            return ([/tool fetch mode=https http-method=get url=("https://api.macvendors.com/".[:pick [:tostr $1] 0 8 ]) as-value output=user ]->"data")
        } on-error={
            return "unknown vendor"
        }
    }

    :local text
    :local number 0
    :set text ("Router ID: $[/system identity get name]")
    :foreach lease in=[/ip/dhcp-server/lease/print as-value] do={
        :set number ($number + 1)
        :set text ($text . "====== \F0\9F\97\82 DHCP LEASE ($number) \F0\9F\97\82 ======%0A")
        :local addr ($lease->"address")
        :set text ($text . "IP Address: $addr%0A")
        :local mac ($lease->"mac-address")
        :set text ($text . "Mac Address: $mac%0A")
        :if ($getVendor = "true") do={
            :local macvendor [$GetMacVendor $mac]
            :set text ($text . "Mac Vendor: $macvendor%0A")    
        }
        :local host ($lease->"host-name")
        :if ([:typeof $host] = "nil") do={:set host "Unknown Hostname"}
        :set text ($text . "Hostname: $host%0A")
        :local lastseen ($lease->"last-seen")
        :set text ($text . "Uptime: $lastseen%0A")
        :local server ($lease->"server")
        :set text ($text . "Server: $server%0A")
    }
    :set text ($text . "=========== END REPORT ===========%0A")
    $send chat=$chatid text=("$text") mode="Markdown"
}

:if ($param1Lower = "client" && $param2Lower = "release") do={
    :if ([:len $param3] > 0) do={
        :local clientID [/ip/dhcp-client/find where interface=$param3]
        :if ([:len $clientID] > 0) do={
            $send chat=$chatid text="DHCP Client akan di release dalam 5 detik" mode="Markdown";
            :delay 5s
            /ip/dhcp-client/release $clientID
        } else={
            $send chat=$chatid text=("Maaf, DHCP client dengan interface $param3 tidak ditemukan") mode="Markdown";
        }
    } else={
        $send chat=$chatid text="Silahkan masukkan interface yang ingin di release dhcpclient-nya" mode="Markdown";
    }
}
